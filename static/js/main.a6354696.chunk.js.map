{"version":3,"sources":["components/Page/Page.jsx","components/Pagination/Pagination.jsx","App.js","index.js"],"names":["Page","perPage","page","total","className","Pagination","changePerPage","onPageChanged","totalList","Array","from","length","_","i","numberOfPages","Math","ceil","pagesList","name","value","onChange","map","number","key","aria-label","type","item","onClick","App","state","handleChange","event","target","checked","setState","preventDefault","this","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"mSAIaA,G,kBAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,MAAlB,OAClB,uBAAGC,UAAU,cAAb,UACOH,EAAUC,EAAOD,EAAU,EADlC,mBAEKA,EAAUC,EAAOC,EAChBA,EACAF,EAAUC,EAJhB,eAI4BC,MCHjBE,EAAa,SAAC,GAMpB,IALLF,EAKI,EALJA,MACAF,EAII,EAJJA,QACAC,EAGI,EAHJA,KACAI,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAYC,MAAMC,KAAK,CAAEC,OAAQR,IAAS,SAACS,EAAGC,GAAJ,OAAUA,EAAI,KACxDC,EAAgBC,KAAKC,KAAKb,EAAQF,GAClCgB,EAAYR,MAAMC,KAAK,CAAEC,OAAQG,IAAiB,SAACF,EAAGC,GAAJ,OAAUA,EAAI,KAEtE,OACE,yBAAKT,UAAU,cACb,8BACE,4BACEA,UAAU,6BACVc,KAAK,UACLC,MAAOlB,EACPmB,SAAUd,GAETE,EAAUa,KAAI,SAAAC,GAAM,OACnB,4BAAQC,IAAKD,EAAQH,MAAOG,GAASA,QAI3C,kBAAC,EAAD,CACEnB,MAAOA,EACPF,QAASA,EACTC,KAAMA,IAER,yBAAKsB,aAAW,2BACd,yBAAKpB,UAAU,WACb,4BACEA,UAAU,sBACVqB,KAAK,UAFP,YAMCR,EAAUI,KAAI,SAAAK,GAAI,OACjB,4BACEtB,UAAU,sBACVqB,KAAK,SACLF,IAAKG,EACLP,MAAOO,EACPC,QAASpB,GAERmB,MAIL,4BACEtB,UAAU,sBACVqB,KAAK,UAFP,YCpDGG,EAAb,4MACEC,MAAQ,CACN3B,KAAM,EACNC,MAAO,GACPF,QAAS,GAJb,EAOE6B,aAAe,SAACC,GACd,MAAuCA,EAAMC,OAArCd,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOM,EAArB,EAAqBA,KAAMQ,EAA3B,EAA2BA,QAE3B,EAAKC,SAAL,eACGhB,EAAgB,aAATO,EACJQ,EACAd,KAbV,EAiBEZ,cAAgB,SAACwB,GACfA,EAAMI,iBAEN,EAAKD,SAAS,CACZhC,KAAM6B,EAAMC,OAAOb,SArBzB,4CAyBE,WACE,MAAiCiB,KAAKP,MAA9B1B,EAAR,EAAQA,MAAOF,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,KAExB,OACE,kBAAC,EAAD,CACEC,MAAOA,EACPF,QAASA,EACTC,KAAMA,EACNI,cAAe8B,KAAKN,aACpBvB,cAAe6B,KAAK7B,oBAlC5B,GAAyB8B,IAAMC,eCA/BC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a6354696.chunk.js","sourcesContent":["import React from 'react';\nimport './Page.css';\nimport PropTypes from 'prop-types';\n\nexport const Page = ({ perPage, page, total }) => (\n  <p className=\"page__text\">\n    {`${(perPage * page - perPage + 1)} -\n    ${(perPage * page > total\n      ? total\n      : perPage * page)} of ${total}`}\n  </p>\n);\n\nPage.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './Pagination.css';\nimport PropTypes from 'prop-types';\n\nimport { Page } from '../Page';\n\nexport const Pagination = ({\n  total,\n  perPage,\n  page,\n  changePerPage,\n  onPageChanged,\n}) => {\n  const totalList = Array.from({ length: total }, (_, i) => i + 1);\n  const numberOfPages = Math.ceil(total / perPage);\n  const pagesList = Array.from({ length: numberOfPages }, (_, i) => i + 1);\n\n  return (\n    <div className=\"pagination\">\n      <form>\n        <select\n          className=\"form-select form-select-sm\"\n          name=\"perPage\"\n          value={perPage}\n          onChange={changePerPage}\n        >\n          {totalList.map(number => (\n            <option key={number} value={number}>{number}</option>\n          ))}\n        </select>\n      </form>\n      <Page\n        total={total}\n        perPage={perPage}\n        page={page}\n      />\n      <nav aria-label=\"Page navigation example\">\n        <div className=\"buttons\">\n          <button\n            className=\"page-item page-link\"\n            type=\"button\"\n          >\n            previous\n          </button>\n          {pagesList.map(item => (\n            <button\n              className=\"page-item page-link\"\n              type=\"button\"\n              key={item}\n              value={item}\n              onClick={onPageChanged}\n            >\n              {item}\n            </button>\n          ))}\n\n          <button\n            className=\"page-item page-link\"\n            type=\"button\"\n          >\n            next\n          </button>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  changePerPage: PropTypes.func.isRequired,\n  onPageChanged: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\nexport class App extends React.PureComponent {\n  state = {\n    page: 1,\n    total: 42,\n    perPage: 5,\n  }\n\n  handleChange = (event) => {\n    const { name, value, type, checked } = event.target;\n\n    this.setState({\n      [name]: type === 'checkbox'\n        ? checked\n        : value,\n    });\n  }\n\n  onPageChanged = (event) => {\n    event.preventDefault();\n\n    this.setState({\n      page: event.target.value,\n    });\n  }\n\n  render() {\n    const { total, perPage, page } = this.state;\n\n    return (\n      <Pagination\n        total={total}\n        perPage={perPage}\n        page={page}\n        changePerPage={this.handleChange}\n        onPageChanged={this.onPageChanged}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}